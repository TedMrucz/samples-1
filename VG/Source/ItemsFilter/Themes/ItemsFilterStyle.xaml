<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:f="clr-namespace:ItemsFilter"
                    xmlns:vw="clr-namespace:ItemsFilter.View"
                    mc:Ignorable="d">

  <!--<ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Glass.UX;component/Assets/DataGrid.xaml" />
  </ResourceDictionary.MergedDictionaries>-->

  <SolidColorBrush x:Key="IconForegroundBrush" Color="#333333" />

  <vw:FilterControlVmToVisibilityConverter x:Key="FilterControlVmToVisibilityConverter" />
  <vw:SimplePropertyConverter x:Key="SimplePropertyConverter" />

  <DrawingImage x:Key="ClearImage">
    <DrawingImage.Drawing>
      <GeometryDrawing Brush="{DynamicResource IconForegroundBrush}" Geometry="M 1,2C 3.33333,3.33333 5.66667,4.66667 7.66667,6.66667C 9.66667,8.66666 11.3333,11.3333 12.1667,12.6667L 13,14M 1,15C 3,12 5,9 7.33333,6.66667C 9.66667,4.33333 12.3333,2.66667 13.6667,1.83333L 15,1" />
    </DrawingImage.Drawing>
  </DrawingImage>

  <DrawingBrush x:Key="FilterButtonEnable" Stretch="None">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{DynamicResource IconForegroundBrush}" Geometry="M 0,0 L 3.5,4 L 7,0 Z"/>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="FilterButtonActive" Stretch="Uniform">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{DynamicResource IconForegroundBrush}" Geometry="F1 M 6,15L 6,11">
          <GeometryDrawing.Pen>
            <Pen Brush="#FF7070DC" EndLineCap="Square" LineJoin="Bevel" StartLineCap="Square" Thickness="2" />
          </GeometryDrawing.Pen>
        </GeometryDrawing>
        <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
          <GeometryDrawing.Pen>
            <Pen Brush="{DynamicResource IconForegroundBrush}" EndLineCap="Round" LineJoin="Round" StartLineCap="Round" />
          </GeometryDrawing.Pen>
        </GeometryDrawing>
        <GeometryDrawing Brush="{DynamicResource IconForegroundBrush}" Geometry="F1 M 2,5L 6,9L 10,5">
          <GeometryDrawing.Pen>
            <Pen Brush="{DynamicResource IconForegroundBrush}" EndLineCap="Round" LineJoin="Round" StartLineCap="Round" />
          </GeometryDrawing.Pen>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="FilterButtonOpen" Stretch="None">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{DynamicResource IconForegroundBrush}" Geometry="F1 M 6,15L 6,11">
          <GeometryDrawing.Pen>
            <Pen Brush="{DynamicResource IconForegroundBrush}" EndLineCap="Square" LineJoin="Bevel" StartLineCap="Square" Thickness="2" />
          </GeometryDrawing.Pen>
        </GeometryDrawing>
        <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
          <GeometryDrawing.Pen>
            <Pen Brush="{DynamicResource IconForegroundBrush}" EndLineCap="Round" LineJoin="Round" StartLineCap="Round" />
          </GeometryDrawing.Pen>
        </GeometryDrawing>
        <GeometryDrawing Geometry="F1 M 2,5L 6,9L 10,5">
          <GeometryDrawing.Pen>
            <Pen Brush="{DynamicResource IconForegroundBrush}" EndLineCap="Round" LineJoin="Round" StartLineCap="Round" />
          </GeometryDrawing.Pen>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="Clear" Stretch="None">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{DynamicResource IconForegroundBrush}" Geometry="M 1,2C 3.33333,3.33333 5.66667,4.66667 7.66667,6.66667C 9.66667,8.66666 11.3333,11.3333 12.1667,12.6667L 13,14M 1,15C 3,12 5,9 7.33333,6.66667C 9.66667,4.33333 12.3333,2.66667 13.6667,1.83333L 15,1" />
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <!--  border style  -->
  <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
    <Setter Property="BorderBrush" Value="#C0C0C0" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Width" Value="Auto" />
    <Setter Property="MinWidth" Value="150" />
    <Setter Property="Background" Value="{DynamicResource CanvasBackground}" />
  </Style>

  <!--  Text block style for displaying the filter type  -->
  <Style x:Key="FilterNameStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground" Value="{DynamicResource InputText}" />
    <Setter Property="Text" Value="Filter" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="2" />
  </Style>

  <Style x:Key="ColumnHeaderButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Chrome" Background="{TemplateBinding Background}" BorderThickness="1,0,0,1" Padding="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{x:Null}" />
  </Style>

  <Style x:Key="FilterClearButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="border"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                BorderThickness="1" Padding="2">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ButtonBorder}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource CanvasBackground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ButtonBorder}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ButtonBorder}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource CanvasBackground}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="path" Stretch="Uniform"
                Data="M 1,2C 3.33333,3.33333 5.66667,4.66667 7.66667,6.66667C 9.66667,8.66666 11.3333,11.3333 12.1667,12.6667L 13,14M 1,15C 3,12 5,9 7.33333,6.66667C 9.66667,4.33333 12.3333,2.66667 13.6667,1.83333L 15,1"
                Fill="{DynamicResource IconForegroundBrush}"
                StrokeEndLineCap="Round"
                StrokeStartLineCap="Round" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{x:Null}" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Height" Value="16" />
    <Setter Property="Margin" Value="0,2,2,0" />
    <Setter Property="Command" Value="{x:Static f:FilterCommand.Clear}" />
  </Style>

  <Style TargetType="{x:Type vw:StringFilterView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type vw:StringFilterView}">
          <Border Height="Auto"
                Margin="{TemplateBinding Margin}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Style="{StaticResource BorderStyle}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TextBlock x:Name="PART_Name" Grid.Column="0" Style="{StaticResource FilterNameStyle}" />
              <TextBlock Grid.Row="1" Margin="1" HorizontalAlignment="Right" Text="Search Type:" TextWrapping="NoWrap" />
              <TextBlock Grid.Row="2" Margin="1" HorizontalAlignment="Right" Text="Find:" TextWrapping="Wrap" />
              <TextBox x:Name="PART_Input"
                      Grid.Row="2"
                      Grid.Column="1"
                      Grid.ColumnSpan="2"
                      Margin="1"
                      Padding="1,1,1,1"
                      Text="{Binding Model.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                      TextWrapping="NoWrap" />
              <ComboBox x:Name="PART_FilterType"
                        Grid.Row="1"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        Margin="2"
                        HorizontalAlignment="Stretch"
                        Padding="1,1,1,1"
                        SelectedValue="{Binding Model.Mode, RelativeSource={RelativeSource TemplatedParent}}" />
              <Button Grid.Column="2" Style="{StaticResource FilterClearButtonStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Filters View  -->
  <Style TargetType="{x:Type vw:RangeFilterView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type vw:RangeFilterView}">
          <Border Height="Auto"
                  Margin="{TemplateBinding Margin}"
                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                  Style="{StaticResource BorderStyle}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TextBlock x:Name="PART_Name" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource FilterNameStyle}" />
              <TextBlock Grid.Row="1" Margin="1,1,1,1" HorizontalAlignment="Left" Padding="1,1,1,1" Text="From:" TextAlignment="Left" TextWrapping="NoWrap" />
              <TextBox x:Name="PART_From"
                      Grid.Row="1"
                      Grid.Column="1"
                      Grid.ColumnSpan="2"
                      Margin="1,1,1,1"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Padding="1,1,1,1"
                      Text="{Binding Model.CompareFrom, Converter={StaticResource SimplePropertyConverter}, UpdateSourceTrigger=Explicit, RelativeSource={RelativeSource TemplatedParent}}"
                      TextWrapping="NoWrap" />
              <TextBlock Grid.Row="2" Grid.Column="0" Margin="1,1,1,1" Padding="1,1,1,1" Text="To :" TextWrapping="Wrap" />
              <TextBox x:Name="PART_To"
                      Grid.Row="2"
                      Grid.Column="1"
                      Grid.ColumnSpan="2"
                      Margin="1,1,1,1"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Padding="1,1,1,1"
                      Text="{Binding Model.CompareTo, Converter={StaticResource SimplePropertyConverter}, UpdateSourceTrigger=Explicit, RelativeSource={RelativeSource TemplatedParent}}"
                      TextWrapping="NoWrap" />
              <Button Grid.Column="2" Style="{StaticResource FilterClearButtonStyle}" Margin="1">
                <Image Source="{StaticResource ClearImage}" />
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Compare Value Filter  -->
  <Style TargetType="{x:Type vw:ComparableFilterView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type vw:ComparableFilterView}">
          <Border Height="Auto"
                  Margin="{TemplateBinding Margin}"
                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                  Style="{StaticResource BorderStyle}">
            <Grid HorizontalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <TextBlock x:Name="PART_Name" Grid.Column="0" Style="{StaticResource FilterNameStyle}" Text="{Binding Model.Name, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <TextBox x:Name="PART_Input"
                      Grid.Row="1"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Margin="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Padding="1,1,1,1"
                      Text="{Binding Model.CompareTo, UpdateSourceTrigger=Explicit, Converter={StaticResource SimplePropertyConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                      TextWrapping="NoWrap" />
              <Button Grid.Column="1" Style="{StaticResource FilterClearButtonStyle}"  Margin="1">
                <Image Source="{StaticResource ClearImage}" />
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MultivalueFilterItemStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Margin" Value="2,0,0,0"/>
    <Setter Property="Padding" Value="4,0,0,0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}"
                  SnapsToDevicePixels="true">
            <StackPanel Orientation="Horizontal">
              <CheckBox x:Name="chk"
                        Background="{DynamicResource ButtonBackground}"  
                        IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="4,0,0,0"/>
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundHover}"/>
              <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
              <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>
              <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="MultiValueFilterViewTemplate" TargetType="{x:Type vw:MultiValueFilterView}">
    <Border MaxHeight="168"
            Margin="{TemplateBinding Margin}"
            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
            VerticalAlignment="{TemplateBinding VerticalAlignment}"
            Style="{StaticResource BorderStyle}"
            d:DesignHeight="168"
            d:DesignWidth="250">
      <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ListBox x:Name="PART_Items"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Width="Auto"
                Height="Auto"
                BorderThickness="0,1,0,0"
                Background="{DynamicResource CanvasBackground}"
                ItemContainerStyle="{StaticResource MultivalueFilterItemStyle}"
                ItemsSource="{Binding Model.AvailableValues, RelativeSource={RelativeSource TemplatedParent}}"
                SelectedValuePath="{x:Null}"
                SelectionMode="Multiple"
                SnapsToDevicePixels="False"
                VirtualizingStackPanel.VirtualizationMode="Recycling" />
        <TextBlock x:Name="PART_Name" Grid.Row="0" Grid.Column="0" Style="{StaticResource FilterNameStyle}" Text="{Binding Model.Name, RelativeSource={RelativeSource TemplatedParent}}" />
        <Button Grid.Column="1" Style="{StaticResource FilterClearButtonStyle}"  Margin="1">
          <Image Source="{StaticResource ClearImage}" />
        </Button>
      </Grid>
    </Border>
  </ControlTemplate>

  <!--  Multi Value Filter  -->
  <Style TargetType="{x:Type vw:MultiValueFilterView}">
    <Setter Property="Template" Value="{StaticResource MultiValueFilterViewTemplate}" />
  </Style>

  <ControlTemplate x:Key="FilterControlTemplate" TargetType="{x:Type f:FilterControl}">
    <Border Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True"
            d:DesignHeight="89">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </Grid>
    </Border>
  </ControlTemplate>

  <Style TargetType="{x:Type f:FilterControl}">
    <Setter Property="Template" Value="{StaticResource FilterControlTemplate}" />
  </Style>

  <Style TargetType="{x:Type f:ColumnFilter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type f:ColumnFilter}">
          <Grid Width="Auto"
                Height="{TemplateBinding Height}"
                Margin="{TemplateBinding Margin}"
                Visibility="{TemplateBinding Model, Converter={StaticResource FilterControlVmToVisibilityConverter}}"
                d:DesignHeight="106"
                d:DesignWidth="107">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FilterState">
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Open">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonOpen}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disable" />
                <VisualState x:Name="Enable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonEnable}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenActive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Rectangle.Fill)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Button x:Name="button" HorizontalAlignment="Right" Command="f:FilterCommand.Show" Padding="2" Style="{StaticResource ColumnHeaderButtonStyle}">
              <Rectangle x:Name="Icon" Width="10" Height="16" Fill="{StaticResource FilterButtonEnable}" />
            </Button>
            <Popup x:Name="PART_FilterView"
                  Grid.Row="1"
                  Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}}"
                  MinWidth="180"
                  HorizontalOffset="8"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  IsOpen="{Binding Model.IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                  Placement="Bottom"
                  PopupAnimation="Scroll"
                  StaysOpen="False">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                  <ItemsPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DataGridColumnFilterHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
    <Setter Property="Padding" Value="4,2,4,2"/>
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding ="{TemplateBinding Padding}">
              <Grid x:Name="containerGrid" Margin="5" >
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="16"/>
                  <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <Path x:Name="SortArrow"
                    Grid.Column="1"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Width="8" Height="6"  Margin="5,0,5,0"
                    Stretch="Fill" Fill="{DynamicResource DataGridHeaderForeground}"
                    RenderTransformOrigin="0.5,0.4"
                    Visibility="Hidden"
                    Data="M0,0 L1,0 0.5,1 z" />
                <f:ColumnFilter Grid.Column="2" FontWeight="Normal" HorizontalAlignment="Right" VerticalAlignment="Center" Background="{TemplateBinding Foreground}"
                              ParentCollection="{Binding ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
              </Grid>
            </Border>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>
